var failureMessage = 'The statement "use strict" is not required within a program generated by a transpiler.';

var isUseStrictStatement = function(statement) {
  return statement.type === 'ExpressionStatement' && statement.expression.value === 'use strict';
};

var inspectBody = function (node, context) {
  if (node.body.length === 0) return;

  var statement = node.body[0];
  if (!isUseStrictStatement(statement)) return;

  context.report(node, failureMessage);
};

var rule = function(context) {
  var visitor = {
    Program: function (node) {
      if (node.body.length === 0) return;

      inspectBody(node, context);
    },
    FunctionExpression: function (node) {
      var expression = node.body;
      if (!expression) return;

      inspectBody(expression, context);
    }
  };

  return visitor;
};

module.exports = rule;
